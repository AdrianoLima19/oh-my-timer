(()=>{"use strict";var e;function t(t,a){e=t.dataset.type,t.toggleAttribute("active",!0),a.toggleAttribute("active",!1),t.setAttribute("aria-expanded",!0),a.setAttribute("aria-expanded",!1),document.querySelector(`.${t.dataset.type}`).toggleAttribute("active",!0),document.querySelector(`.${a.dataset.type}`).toggleAttribute("active",!1)}document.querySelector("main").addEventListener("click",(e=>{if(e.target.closest("nav")&&e.target?.dataset.type){let a=e.target?.nextElementSibling||e.target?.previousElementSibling;window.innerWidth>1024?e.target?.hasAttribute("active")||t(e.target,a):t(a,e.target)}else if(e.target.closest("section")?.id&&e.target?.dataset.type){let t=e.target.dataset.type,a="timer"===e.target.closest("section").id?q:s;if(e.target.blur(),!t||"string"!=typeof t)return;a[t]&&a[t]()}}));const a=document.querySelector("#stopwatch"),r=a.querySelectorAll(".display span");var i,n,o;const l={play:a.querySelector(".control .ph-play-fill"),pause:a.querySelector(".control .ph-pause-fill")},s={play(){c("play"),n=n?n+Date.now()-o:Date.now(),(i=new Worker("./assets/js/stopwatch.js")).postMessage(n),i.onmessage=t=>{return a=t.data,void("stopwatch"===e&&("00"!==a[3]&&(r[3].textContent=a[3]),"00"!==a[2]&&a[2]!==r[2]&&(r[2].textContent=a[2]),"00"!==a[1]&&a[1]!==r[1]&&(r[1].textContent=a[1]),"00"!==a[0]&&a[0]!==r[0]&&(r[0].textContent=a[0])));var a}},pause(){c("pause"),i.terminate(),o=Date.now()},replay(){c("pause"),n=o=!1,r[0].textContent=r[1].textContent="",r[2].textContent=r[3].textContent="00"}};function c(e){l.play.setAttribute("aria-hidden","play"===e),l.pause.setAttribute("aria-hidden","pause"===e)}const u=document.querySelector("#timer"),p=u.querySelectorAll(".display span");var d,f,y,g,h,b,S,m;f=2e3,f=3e5,b=new Audio("./assets/audio/Alarm Clock Beep.mp3"),h=JSON.parse(localStorage.getItem("isAudioEnabled"))??!0,S=JSON.parse(localStorage.getItem("isNotificationEnabled"))??!1;const A={play:u.querySelector(".control .ph-play-fill"),pause:u.querySelector(".control .ph-pause-fill"),close:u.querySelector(".control .ph-x-fill"),save:u.querySelector(".control [edit].ph-check-fill"),check:u.querySelector(".control [finish].ph-check-fill"),restart:u.querySelector(".control .ph-arrows-counter-clockwise-fill"),speakerOn:u.querySelector(".control .ph-speaker-simple-high-fill"),speakerOff:u.querySelector(".control .ph-speaker-simple-slash-fill"),bellOn:u.querySelector(".control .ph-bell-ringing-fill"),bellOff:u.querySelector(".control .ph-bell-slash-fill")},q={edit(){k("pause"),d?.terminate(),y=Date.now(),v(!0)},save(){f=function(e){let t=e.match(/.{1,2}/g);return 36e5*t[0]+6e4*t[1]+1e3*t[2]}(C()),O(),v(!1)},close(){w(x(g?g-y:f||0),!1),v(!1)},play(){"000000"===C()||f<1e3||(k("play"),g=g?g-(y-Date.now()):f+1e3+Date.now(),(d=new Worker("./assets/js/timer.js")).postMessage(g),d.onmessage=e=>{e.data?w(e.data):(d.terminate(),w("000000"),h&&b.play(),S&&(S&&(m=new Notification("Oh My Timer",{body:"Timer Finalizado!"}))),E(!0))})},pause(){k("pause"),d.terminate(),y=Date.now()},reset(){k("pause"),d?.terminate(),O(),w(x(f??0),!1)},check(){b?.pause(),m?.close(),k("pause"),O(),E(!1)},restart(){b?.pause(),m?.close(),this.reset(),E(!1),this.play()},speakerOn(){localStorage.setItem("isAudioEnabled",!1),h=!1,N()},speakerOff(){localStorage.setItem("isAudioEnabled",!0),h=!0,N()},bellOn(){localStorage.setItem("isNotificationEnabled",!1),S=!1,I()},async bellOff(){"default"===Notification.permission&&await Notification.requestPermission(),"granted"===Notification.permission&&(localStorage.setItem("isNotificationEnabled",!0),S=!0,I()),Notification.permission}};function k(e){A.play.setAttribute("aria-hidden","play"===e),A.pause.setAttribute("aria-hidden","pause"===e)}function v(e){u.querySelector(".display input").toggleAttribute("edit",e),u.querySelector(".control").toggleAttribute("edit",e),A.close.setAttribute("aria-hidden",!e),A.save.setAttribute("aria-hidden",!e)}function w(e,t=!0){let a=e.match(/.{1,2}/g);t?(p[0]!==a[0]&&(p[0].textContent=a[0]),p[1]!==a[1]&&(p[1].textContent=a[1]),p[2]!==a[2]&&(p[2].textContent=a[2])):(p[0].textContent=a[0],p[1].textContent=a[1],p[2].textContent=a[2])}function x(e){let t=Math.floor(parseInt(e/1e3)%60).toString().padStart(2,"0"),a=Math.floor(parseInt(e/6e4)%60).toString().padStart(2,"0");return`${Math.floor(parseInt(e/36e5)).toString().padStart(2,"0")}${a}${t}`}function C(){return u.querySelector(".display").textContent.replace(/\r?\n|\r/g,"").replace(/:/g,"").replaceAll(" ","")}function O(){y=g=0}function E(e){u.querySelector(".control").toggleAttribute("finish",e),A.restart.setAttribute("aria-hidden",!e),A.check.setAttribute("aria-hidden",!e)}function N(){A.speakerOn.setAttribute("aria-hidden",!h),A.speakerOff.setAttribute("aria-hidden",h)}function I(){A.bellOn.setAttribute("aria-hidden",!S),A.bellOff.setAttribute("aria-hidden",S)}const D=u.querySelector(".display input");D.addEventListener("focus",(()=>w("000000",!1))),D.onkeydown=e=>{"Enter"===e.key&&q.save()},D.addEventListener("textInput",(e=>{e.preventDefault(),isNaN(e.data)||w(C().substring(1)+e.data)})),N(),I()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,