{"version":3,"file":"js/main.min.js","mappings":"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","sources":["webpack://oh-my-timer/./assets/js/main.js"],"sourcesContent":["import \"../css/phosphor.css\";\r\nimport \"../css/styles.css\";\r\n\r\n/**\r\n * Para evitar uso de múltiplos eventListeners apenas um está sendo utilizado no container identificando o\r\n * parente do objeto clicado [nav|section] e executando as funcionalidades de acordo.\r\n */\r\ndocument.querySelector(\"main\").addEventListener(\"click\", (event) => {\r\n  if (event.target.closest(\"nav\") && event.target.dataset?.type) {\r\n    let parent = event.target?.nextElementSibling ?? event.target?.previousElementSibling;\r\n\r\n    if (window.innerWidth > 1024 && !event.target?.hasAttribute(\"active\")) toggleNavigationPanel(event.target, parent);\r\n    if (window.innerWidth <= 1024) toggleNavigationPanel(parent, event.target);\r\n  } else if (event.target.closest(\"section\")?.id && event.target.dataset?.type) {\r\n    let exec = event.target.closest(\"section\").id === \"timer\" ? timerRoles : stopwatchRoles;\r\n    let role = event.target.dataset.type;\r\n\r\n    if (!role || typeof role !== \"string\") return;\r\n    if (exec[role]) exec[role]();\r\n  }\r\n});\r\n\r\n// Navigation\r\n\r\nvar navigation = localStorage.getItem(\"navigation\") ?? \"timer\";\r\n\r\nfunction toggleNavigationPanel(target, parent) {\r\n  navigation = target.dataset.type;\r\n  localStorage.setItem(\"navigation\", navigation);\r\n\r\n  resetDocumentTitle();\r\n\r\n  target.toggleAttribute(\"active\", true);\r\n  parent.toggleAttribute(\"active\", false);\r\n\r\n  target.setAttribute(\"aria-expanded\", true);\r\n  parent.setAttribute(\"aria-expanded\", false);\r\n\r\n  document.querySelector(`.${target.dataset.type}`).toggleAttribute(\"active\", true);\r\n  document.querySelector(`.${parent.dataset.type}`).toggleAttribute(\"active\", false);\r\n}\r\n\r\nfunction resetDocumentTitle() {\r\n  document.title = \"Oh My Timer\";\r\n}\r\n\r\nfunction pushTimeToDocumentTitle(time) {\r\n  document.title = `Oh My Timer - ${time[0]}:${time[1]}:${time[2]}`;\r\n}\r\n\r\n// Stopwatch\r\n\r\nconst stopwatchPanel = document.querySelector(\"#stopwatch\");\r\nconst stopwatchDisplay = stopwatchPanel.querySelectorAll(\".display span\");\r\n\r\nvar stopwatchWorker, stopwatchStamp, stopwatchFreezeTime;\r\n\r\nconst stopwatchButtons = {\r\n  play: stopwatchPanel.querySelector(\".control .ph-play-fill\"),\r\n  pause: stopwatchPanel.querySelector(\".control .ph-pause-fill\"),\r\n};\r\n\r\nconst stopwatchRoles = {\r\n  play() {\r\n    toggleStopwatchState(\"play\");\r\n\r\n    stopwatchStamp = !stopwatchStamp ? Date.now() : stopwatchStamp + Date.now() - stopwatchFreezeTime;\r\n\r\n    stopwatchWorker = new Worker(\"./assets/js/stopwatch.js\");\r\n    stopwatchWorker.postMessage(stopwatchStamp);\r\n    stopwatchWorker.onmessage = (message) => pushStopwatchToDisplay(message.data);\r\n  },\r\n  pause() {\r\n    stopwatchWorker.terminate();\r\n\r\n    stopwatchFreezeTime = Date.now();\r\n\r\n    toggleStopwatchState(\"pause\");\r\n  },\r\n  replay() {\r\n    stopwatchWorker.terminate();\r\n\r\n    stopwatchStamp = stopwatchFreezeTime = false;\r\n\r\n    stopwatchDisplay[0].textContent = stopwatchDisplay[1].textContent = \"\";\r\n    stopwatchDisplay[2].textContent = stopwatchDisplay[3].textContent = \"00\";\r\n\r\n    resetDocumentTitle();\r\n    toggleStopwatchState(\"pause\");\r\n  },\r\n};\r\n\r\nfunction toggleStopwatchState(state) {\r\n  stopwatchButtons.play.setAttribute(\"aria-hidden\", state === \"play\");\r\n  stopwatchButtons.pause.setAttribute(\"aria-hidden\", state === \"pause\");\r\n}\r\n\r\nfunction pushStopwatchToDisplay(time) {\r\n  if (navigation !== \"stopwatch\") return;\r\n\r\n  pushTimeToDocumentTitle(time);\r\n\r\n  stopwatchDisplay[3].textContent = time[3];\r\n  stopwatchDisplay[2].textContent = time[2];\r\n  if (time[1] !== \"00\") stopwatchDisplay[1].textContent = time[1];\r\n  if (time[0] !== \"00\") stopwatchDisplay[0].textContent = time[0];\r\n}\r\n\r\n// Timer\r\n\r\nconst timerPanel = document.querySelector(\"#timer\");\r\nconst timerDisplay = timerPanel.querySelectorAll(\".display span\");\r\n\r\nvar timerWorker,\r\n  timerStamp,\r\n  timerFreeze,\r\n  timerOnGoing,\r\n  isAudioEnabled,\r\n  audioFile,\r\n  isNotificationEnabled,\r\n  timerNotification;\r\n\r\ntimerStamp = 2000; // 2s\r\ntimerStamp = 300000; // 5m\r\n\r\naudioFile = new Audio(\"./assets/audio/Alarm Clock Beep.mp3\");\r\nisAudioEnabled = JSON.parse(localStorage.getItem(\"isAudioEnabled\")) ?? true;\r\nisNotificationEnabled = JSON.parse(localStorage.getItem(\"isNotificationEnabled\")) ?? false;\r\n\r\nconst timerButtons = {\r\n  play: timerPanel.querySelector(\".control .ph-play-fill\"),\r\n  pause: timerPanel.querySelector(\".control .ph-pause-fill\"),\r\n  close: timerPanel.querySelector(\".control .ph-x-fill\"),\r\n  save: timerPanel.querySelector(\".control [edit].ph-check-fill\"),\r\n  restart: timerPanel.querySelector(\".control .ph-arrows-counter-clockwise-fill\"),\r\n  check: timerPanel.querySelector(\".control [finish].ph-check-fill\"),\r\n  speakerOn: timerPanel.querySelector(\".control .ph-speaker-simple-high-fill\"),\r\n  speakerOff: timerPanel.querySelector(\".control .ph-speaker-simple-slash-fill\"),\r\n  bellOn: timerPanel.querySelector(\".control .ph-bell-ringing-fill\"),\r\n  bellOff: timerPanel.querySelector(\".control .ph-bell-slash-fill\"),\r\n};\r\n\r\nconst timerRoles = {\r\n  edit() {\r\n    toggleTimerState(\"pause\");\r\n\r\n    timerWorker?.terminate();\r\n\r\n    if (!timerFreeze) timerFreeze = Date.now();\r\n\r\n    toggleTimerEditor(true);\r\n  },\r\n  close() {\r\n    let time = timerOnGoing ? timerOnGoing - timerFreeze : timerStamp ? timerStamp : 0;\r\n\r\n    pushStringToTimerDisplay(parseTimerStampToString(time), false);\r\n\r\n    toggleTimerEditor(false);\r\n  },\r\n  save() {\r\n    timerStamp = parseTimerStringToStamp(getTimerDisplayString());\r\n\r\n    resetTimerClockVariables();\r\n\r\n    toggleTimerEditor(false);\r\n  },\r\n  play() {\r\n    if (getTimerDisplayString() === \"000000\" || timerStamp < 1000) return;\r\n\r\n    toggleTimerState(\"play\");\r\n\r\n    timerOnGoing = !timerOnGoing ? timerStamp + 1000 + Date.now() : timerOnGoing - (timerFreeze - Date.now());\r\n\r\n    timerWorker = new Worker(\"./assets/js/timer.js\");\r\n    timerWorker.postMessage(timerOnGoing);\r\n\r\n    timerWorker.onmessage = (message) => {\r\n      if (message.data) {\r\n        pushStringToTimerDisplay(message.data);\r\n      } else {\r\n        timerWorker.terminate();\r\n\r\n        pushStringToTimerDisplay(\"000000\");\r\n\r\n        if (isAudioEnabled) audioFile.play();\r\n        if (isNotificationEnabled) pushTimerNotification();\r\n\r\n        toggleFinishTimer(true);\r\n      }\r\n    };\r\n  },\r\n  pause() {\r\n    toggleTimerState(\"pause\");\r\n\r\n    timerWorker.terminate();\r\n\r\n    timerFreeze = Date.now();\r\n  },\r\n  reset() {\r\n    toggleTimerState(\"pause\");\r\n\r\n    timerWorker?.terminate();\r\n\r\n    resetDocumentTitle();\r\n    resetTimerClockVariables();\r\n    pushStringToTimerDisplay(parseTimerStampToString(timerStamp ?? 0), false, false);\r\n  },\r\n  restart() {\r\n    audioFile?.pause();\r\n    timerNotification?.close();\r\n\r\n    this.reset();\r\n\r\n    toggleFinishTimer(false);\r\n\r\n    this.play();\r\n  },\r\n  check() {\r\n    audioFile?.pause();\r\n    timerNotification?.close();\r\n\r\n    toggleTimerState(\"pause\");\r\n    resetTimerClockVariables();\r\n    toggleFinishTimer(false);\r\n  },\r\n  speakerOn() {\r\n    localStorage.setItem(\"isAudioEnabled\", false);\r\n    isAudioEnabled = false;\r\n\r\n    toggleTimerSpeaker();\r\n  },\r\n  speakerOff() {\r\n    localStorage.setItem(\"isAudioEnabled\", true);\r\n    isAudioEnabled = true;\r\n\r\n    toggleTimerSpeaker();\r\n  },\r\n  bellOn() {\r\n    localStorage.setItem(\"isNotificationEnabled\", false);\r\n    isNotificationEnabled = false;\r\n\r\n    toggleTimerNotification();\r\n  },\r\n  async bellOff() {\r\n    if (Notification.permission === \"default\") {\r\n      await Notification.requestPermission();\r\n    }\r\n    if (Notification.permission === \"granted\") {\r\n      localStorage.setItem(\"isNotificationEnabled\", true);\r\n      isNotificationEnabled = true;\r\n\r\n      toggleTimerNotification();\r\n    }\r\n    if (Notification.permission === \"denied\") {\r\n      // shake the icon\r\n    }\r\n  },\r\n};\r\n\r\nfunction toggleTimerState(state) {\r\n  timerButtons.play.setAttribute(\"aria-hidden\", state === \"play\");\r\n  timerButtons.pause.setAttribute(\"aria-hidden\", state === \"pause\");\r\n}\r\n\r\nfunction toggleTimerEditor(state) {\r\n  timerPanel.querySelector(\".display input\").toggleAttribute(\"edit\", state);\r\n  timerPanel.querySelector(\".control\").toggleAttribute(\"edit\", state);\r\n  timerButtons.close.setAttribute(\"aria-hidden\", !state);\r\n  timerButtons.save.setAttribute(\"aria-hidden\", !state);\r\n}\r\n\r\nfunction pushStringToTimerDisplay(string, compare = true, pushToTile = true) {\r\n  let array = string.match(/.{1,2}/g);\r\n\r\n  if (navigation === \"timer\" && pushToTile) pushTimeToDocumentTitle(array);\r\n\r\n  if (compare) {\r\n    if (timerDisplay[0] !== array[0]) timerDisplay[0].textContent = array[0];\r\n    if (timerDisplay[1] !== array[1]) timerDisplay[1].textContent = array[1];\r\n    if (timerDisplay[2] !== array[2]) timerDisplay[2].textContent = array[2];\r\n  } else {\r\n    timerDisplay[0].textContent = array[0];\r\n    timerDisplay[1].textContent = array[1];\r\n    timerDisplay[2].textContent = array[2];\r\n  }\r\n}\r\n\r\nfunction parseTimerStampToString(stamp) {\r\n  let sec = Math.floor(parseInt(stamp / 1000) % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  let min = Math.floor(parseInt(stamp / 60000) % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  let hour = Math.floor(parseInt(stamp / 3600000))\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n\r\n  return `${hour}${min}${sec}`;\r\n}\r\n\r\nfunction parseTimerStringToStamp(string) {\r\n  let time = string.match(/.{1,2}/g);\r\n  return time[0] * 3600000 + time[1] * 60000 + time[2] * 1000;\r\n}\r\n\r\nfunction getTimerDisplayString() {\r\n  return timerPanel\r\n    .querySelector(\".display\")\r\n    .textContent.replace(/\\r?\\n|\\r/g, \"\")\r\n    .replace(/:/g, \"\")\r\n    .replaceAll(\" \", \"\");\r\n}\r\n\r\nfunction resetTimerClockVariables() {\r\n  timerFreeze = timerOnGoing = 0;\r\n}\r\n\r\nfunction toggleFinishTimer(state) {\r\n  timerPanel.querySelector(\".control\").toggleAttribute(\"finish\", state);\r\n  timerButtons.restart.setAttribute(\"aria-hidden\", !state);\r\n  timerButtons.check.setAttribute(\"aria-hidden\", !state);\r\n}\r\n\r\nfunction toggleTimerSpeaker() {\r\n  timerButtons.speakerOn.setAttribute(\"aria-hidden\", !isAudioEnabled);\r\n  timerButtons.speakerOff.setAttribute(\"aria-hidden\", isAudioEnabled);\r\n}\r\n\r\nfunction toggleTimerNotification() {\r\n  timerButtons.bellOn.setAttribute(\"aria-hidden\", !isNotificationEnabled);\r\n  timerButtons.bellOff.setAttribute(\"aria-hidden\", isNotificationEnabled);\r\n}\r\n\r\nfunction pushTimerNotification() {\r\n  if (!isNotificationEnabled) return;\r\n\r\n  timerNotification = new Notification(\"Oh My Timer\", { body: \"Timer Finalizado!\" });\r\n}\r\n\r\n// Timer Input\r\n\r\nconst timerInput = timerPanel.querySelector(\".display input\");\r\n\r\ntimerInput.addEventListener(\"focus\", () => pushStringToTimerDisplay(\"000000\", false));\r\n\r\ntimerInput.onkeydown = (key) => {\r\n  if (key.key === \"Enter\") timerRoles.save();\r\n};\r\n\r\ntimerInput.addEventListener(\"textInput\", (key) => {\r\n  key.preventDefault();\r\n  if (isNaN(key.data)) return;\r\n  pushStringToTimerDisplay(getTimerDisplayString().substring(1) + key.data);\r\n});\r\n\r\n/**\r\n * Update UI after setup\r\n *\r\n * Não é necessário colocar scripts abaixo dentro do window.onload pois o arquivo é chamado\r\n * com atributo defer, executando este script só quando o html ja está pronto.\r\n */\r\n\r\n(() => {\r\n  let target = document.querySelector(`nav [data-type='${navigation}']`);\r\n  let parent = target?.nextElementSibling ?? target?.previousElementSibling;\r\n  toggleNavigationPanel(target, parent);\r\n})();\r\n\r\ntoggleTimerSpeaker();\r\ntoggleTimerNotification();\r\n\r\n/**\r\n * Caso website seja acessado em algum dispositivo móvel o script abaixo altera o tipo do input para int.\r\n */\r\nlet browserAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\nif (\r\n  /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n    browserAgent\r\n  ) ||\r\n  /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n    browserAgent.substr(0, 4)\r\n  )\r\n) {\r\n  timerInput.type = \"number\";\r\n}\r\n"],"names":["document","querySelector","addEventListener","event","target","closest","dataset","type","parent","nextElementSibling","previousElementSibling","window","innerWidth","hasAttribute","toggleNavigationPanel","id","exec","timerRoles","stopwatchRoles","role","navigation","localStorage","getItem","setItem","resetDocumentTitle","toggleAttribute","setAttribute","title","pushTimeToDocumentTitle","time","stopwatchPanel","stopwatchDisplay","querySelectorAll","stopwatchWorker","stopwatchStamp","stopwatchFreezeTime","stopwatchButtons","play","pause","toggleStopwatchState","Date","now","Worker","postMessage","onmessage","message","pushStopwatchToDisplay","data","textContent","terminate","replay","state","timerPanel","timerDisplay","timerWorker","timerStamp","timerFreeze","timerOnGoing","isAudioEnabled","audioFile","isNotificationEnabled","timerNotification","Audio","JSON","parse","timerButtons","close","save","restart","check","speakerOn","speakerOff","bellOn","bellOff","edit","toggleTimerState","toggleTimerEditor","pushStringToTimerDisplay","parseTimerStampToString","string","match","parseTimerStringToStamp","getTimerDisplayString","resetTimerClockVariables","Notification","body","toggleFinishTimer","reset","this","toggleTimerSpeaker","toggleTimerNotification","async","permission","requestPermission","compare","pushToTile","array","stamp","sec","Math","floor","parseInt","toString","padStart","min","replace","replaceAll","timerInput","onkeydown","key","preventDefault","isNaN","substring","browserAgent","navigator","userAgent","vendor","opera","test","substr"],"sourceRoot":""}